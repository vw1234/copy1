<?php
/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\UserBundle\Entity;

use Sonata\UserBundle\Entity\BaseUser as BaseUser;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;
use Nwp\AssessmentBundle\Entity\ProjectUser;
use Nwp\AssessmentBundle\Entity\EventUser;

/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */
class User extends BaseUser
{

    /**
     * @var integer $id
     */
    protected $id;

    /**
     * Get id
     *
     * @return integer $id
     */
    public function getId()
    {
        return $this->id;
    }
    
    public function __toString()
    {
        $url= $_SERVER["REQUEST_URI"];
        if (strpos($url, "/admin")!== false) {  //The url of the page designates that it's the Admin Site
            return $this->firstname." ".$this->lastname." - ".$this->id;
        } else {
            return $this->firstname." ".$this->lastname; 
        }
    }
    
    
   /*=========================================================================*/    
    
    
    /*  PROJECT USER ASSOCIATIVE TABLE */    

    
    /**
     * @ORM\OneToMany(targetEntity="ProjectUser", mappedBy="user", cascade={"all"})
     * */
    protected $pu;



  //  public function __construct()
  //  {
   //     parent::__construct();
//        $user = $this->get('security.context')->getToken()->getUser();
  //  }

    public function getPu()
    {
        return $this->pu;
    }

    public function setPu($pu)
    {
        $this->pu = $pu;
    }
    
    /*=========================================================================*/    
    
    
    /*  EVENT USER ASSOCIATIVE TABLE */    

    
    /**
     * @ORM\OneToMany(targetEntity="EventUser", mappedBy="user", cascade={"all"})
     * */
    protected $eu;

    public function getEu()
    {
        return $this->eu;
    }

    public function setEu($eu)
    {
        $this->eu = $eu;
    }
    
    /**
     * Constructor
     */

    public function __construct()
    {
        parent::__construct();
        $this->eu = new ArrayCollection();
          
    }

    
 
    
  
    
}